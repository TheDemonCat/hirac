#Использовать irac

Перем ПодключениеКАгентам;
Перем Кластеры;

#Область ПрограммныйИнтерфейс

// Процедура инициализирует подключение к агентам управления кластерами
//
// Параметры:
//   НастройкиПодключения     - Строка,     - путь к файлу настроек управления кластерами
//                              Структура     или структура настроек управления кластерами
//
Процедура Инициализировать(Знач НастройкиПодключения = Неопределено) Экспорт

	ПодключениеКАгентам = Новый ПодключениеКАгентам(НастройкиПодключения);

КонецПроцедуры // Инициализировать()

// Функция - возвращает объект-подключение к агентам кластера 1С
//
// Возвращаемое значение:
//   ПодключениеКАгентам     - объект-подключение к агентам кластера 1С
//
Функция ПодключениеКАгентам() Экспорт
	
	Возврат ПодключениеКАгентам;

КонецФункции // ПодключениеКАгентам()

Процедура ОбновитьКластеры(Знач Поля = "_all", Знач Фильтр = Неопределено) Экспорт

	Если ТипЗнч(Поля) = Тип("Строка") Тогда
		Поля = СтрРазделить(Поля, ",", Ложь);
		Для й = 0 По Поля.ВГраница() Цикл
			Поля[й] = ВРег(СокрЛП(Поля[й]));
		КонецЦикла;
	ИначеЕсли НЕ ТипЗнч(Поля) = Тип("Массив") Тогда
		Поля = Новый Массив();
		Поля.Добавить("_ALL");
	КонецЕсли;

	ДобавленныеКластеры = Новый Соответствие();

	Кластеры = Новый Массив();

	Для Каждого ТекАгент Из ПодключениеКАгентам.Агенты() Цикл

		КластерыАгента = КластерыАгента(ТекАгент.Значение, Поля);

		Для Каждого ТекКластер Из КластерыАгента Цикл

			Если ДобавленныеКластеры[ТекКластер["cluster"]] = Неопределено Тогда
				ДобавленныеКластеры.Вставить(ТекКластер["cluster"], Истина);
			Иначе
				Продолжить;
			КонецЕсли;

			Если НЕ ОбщегоНазначения.ОбъектСоответствуетФильтру(ТекКластер, Фильтр) Тогда
				Продолжить;
			КонецЕсли;

			Кластеры.Добавить(ТекКластер);

		КонецЦикла;

	КонецЦикла;

КонецПроцедуры // ОбновитьКластеры()

Функция Кластеры(Знач Поля = "_all", Знач Фильтр = Неопределено, Знач Обновить = Ложь) Экспорт

	Если Обновить Тогда
		ОбновитьКластеры(Поля, Фильтр);
	КонецЕсли;

	Возврат Кластеры;

КонецФункции // Кластеры()

Функция Кластер(АдресСервера, ПортСервера, Знач Поля = "_all", Знач Обновить = Ложь) Экспорт

	Если Обновить Тогда
		ОбновитьКластеры(Поля);
	КонецЕсли;

	Для Каждого ТекКластер Из Кластеры Цикл
		Если ТекКластер["host"] = АдресСервера И ТекКластер["port"] = ПортСервера Тогда
			Возврат ТекКластер;
		КонецЕсли;
	КонецЦикла;

	Возврат Неопределено;

КонецФункции // Кластер()

#КонецОбласти // ПрограммныйИнтерфейс

#Область ПолучениеДанныхКластера

Функция КластерыАгента(Знач Агент, Знач Поля)

	КластерыАгента = Новый Массив();

	СписокКластеров = Агент.Кластеры().Список(, , Истина);

	ПоляКластера = Агент.Кластеры().ПараметрыОбъекта().ОписаниеСвойств("ИмяРАК");

	Для Каждого ТекКластер Из СписокКластеров Цикл

		ОписаниеКластера = Новый Соответствие();
		Если НЕ (Поля.Найти("AGENT") = Неопределено И Поля.Найти("_ALL") = Неопределено) Тогда
			ОписаниеКластера.Вставить("agent", СтрШаблон("%1:%2",
			                                             Агент.АдресСервераАдминистрирования(),
			                                             Агент.ПортСервераАдминистрирования()));
		КонецЕсли;
		Если НЕ (Поля.Найти("COUNT") = Неопределено И Поля.Найти("_ALL") = Неопределено) Тогда
			ОписаниеКластера.Вставить("count", 1);
		КонецЕсли;

		Для Каждого ТекЭлемент Из ПоляКластера Цикл
			Если Поля.Найти(ВРег(ТекЭлемент.Ключ)) = Неопределено И Поля.Найти("_ALL") = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ЗначениеЭлемента = ТекКластер[ТекЭлемент.Значение.Имя];
			Если ТекЭлемент.Ключ = "cluster" Тогда
				ОписаниеКластера.Вставить("cluster-label", СтрШаблон("%1:%2",
				                                                     ТекКластер.Получить("АдресСервера"),
				                                                     ТекКластер.Получить("ПортСервера")));
			ИначеЕсли ТекЭлемент.Ключ = "name" И Лев(ЗначениеЭлемента, 1) = """"  И Прав(ЗначениеЭлемента, 1) = """" Тогда
				ЗначениеЭлемента = Сред(ЗначениеЭлемента, 2, СтрДлина(ЗначениеЭлемента) - 2);
			КонецЕсли;
			ОписаниеКластера.Вставить(ТекЭлемент.Ключ, ЗначениеЭлемента);
		КонецЦикла;

		КластерыАгента.Добавить(ОписаниеКластера);

	КонецЦикла;

	Возврат КластерыАгента;

КонецФункции // КластерыАгента()

#КонецОбласти // ПолучениеДанныхКластера

Инициализировать();
