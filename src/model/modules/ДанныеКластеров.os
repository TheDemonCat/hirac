#Использовать irac

Перем ПодключениеКАгентам;
Перем Кластеры;

#Область ПрограммныйИнтерфейс

// Процедура инициализирует подключение к агентам управления кластерами
//
// Параметры:
//   НастройкиПодключения     - Строка,     - путь к файлу настроек управления кластерами
//                              Структура     или структура настроек управления кластерами
//
Процедура Инициализировать(Знач НастройкиПодключения = Неопределено) Экспорт

	ПодключениеКАгентам = Новый ПодключениеКАгентам(НастройкиПодключения);

КонецПроцедуры // Инициализировать()

// Функция - возвращает объект-подключение к агентам кластера 1С
//
// Возвращаемое значение:
//   ПодключениеКАгентам     - объект-подключение к агентам кластера 1С
//
Функция ПодключениеКАгентам() Экспорт
	
	Возврат ПодключениеКАгентам;

КонецФункции // ПодключениеКАгентам()

Процедура ОбновитьКластеры() Экспорт

	Кластеры = Новый Массив();

	Для Каждого ТекАгент Из ПодключениеКАгентам.Агенты() Цикл

		КластерыАгента = КластерыАгента(ТекАгент.Значение);

		Для Каждого ТекКластер Из КластерыАгента Цикл
			Кластеры.Добавить(ТекКластер);
		КонецЦикла;

	КонецЦикла;

КонецПроцедуры // ОбновитьКластеры()

Функция Кластеры(Знач Обновить = Ложь) Экспорт

	Если Обновить Тогда
		ОбновитьКластеры();
	КонецЕсли;

	Возврат Кластеры;

КонецФункции // Кластеры()

Функция Кластер(Кластер, Знач Обновить = Ложь) Экспорт

	Если Обновить Тогда
		ОбновитьКластеры();
	КонецЕсли;

	Для Каждого ТекКластер Из Кластеры Цикл
		Если ТекКластер["cluster"] = Кластер Тогда
			Возврат ТекКластер;
		КонецЕсли;
	КонецЦикла;

	Возврат Неопределено;

КонецФункции // Кластер()

Функция Список() Экспорт

	Возврат ОбщегоНазначения.ДанныеВJSON(Кластеры(Истина));
	
КонецФункции // Список()

#КонецОбласти // ПрограммныйИнтерфейс

#Область ПолучениеДанныхКластера

Функция КластерыАгента(Знач Агент)

	КластерыАгента = Новый Массив();

	СписокКластеров = Агент.Кластеры().Список(, , Истина);

	ПоляКластера = Агент.Кластеры().ПараметрыОбъекта("ИмяРАК");

	Для Каждого ТекКластер Из СписокКластеров Цикл

		ОписаниеКластера = Новый Соответствие();

		Для Каждого ТекЭлемент Из ПоляКластера Цикл
			ЗначениеЭлемента = ТекКластер[ТекЭлемент.Значение.Имя];
			Если ТекЭлемент.Ключ = "cluster" Тогда
				ЗначениеЭлемента = ТекКластер[ПоляКластера["name"].Имя];
			КонецЕсли;
			ОписаниеКластера.Вставить(ТекЭлемент.Ключ, ЗначениеЭлемента);
		КонецЦикла;

		КластерыАгента.Добавить(ОписаниеКластера);

	КонецЦикла;

	Возврат КластерыАгента;

КонецФункции // КластерыАгента()

#КонецОбласти // ПолучениеДанныхКластера

Инициализировать();
