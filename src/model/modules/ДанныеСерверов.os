#Использовать irac

Перем ПодключениеКАгентам;
Перем Серверы;

#Область ПрограммныйИнтерфейс

// Процедура инициализирует подключение к агентам управления кластерами
//
// Параметры:
//   НастройкиПодключения     - Строка,     - путь к файлу настроек управления кластерами
//                              Структура     или структура настроек управления кластерами
//
Процедура Инициализировать(Знач НастройкиПодключения = Неопределено) Экспорт

	ПодключениеКАгентам = Новый ПодключениеКАгентам(НастройкиПодключения);

КонецПроцедуры // Инициализировать()

// Функция - возвращает объект-подключение к агентам кластера 1С
//
// Возвращаемое значение:
//   ПодключениеКАгентам     - объект-подключение к агентам кластера 1С
//
Функция ПодключениеКАгентам() Экспорт
	
	Возврат ПодключениеКАгентам;

КонецФункции // ПодключениеКАгентам()

Процедура ОбновитьСерверы() Экспорт

	Серверы = Новый Массив();

	Для Каждого ТекАгент Из ПодключениеКАгентам.Агенты() Цикл

		СерверыАгента = СерверыАгента(ТекАгент.Значение);

		Для Каждого ТекСервер Из СерверыАгента Цикл
			Серверы.Добавить(ТекСервер);
		КонецЦикла;

	КонецЦикла;

КонецПроцедуры // ОбновитьСерверы()

Функция Серверы(Знач Обновить = Ложь) Экспорт

	Если Обновить Тогда
		ОбновитьСерверы();
	КонецЕсли;

	Возврат Серверы;

КонецФункции // Серверы()

Функция Сервер(АдресСервера, ПортСервера, Знач Обновить = Ложь) Экспорт

	Если Обновить Тогда
		ОбновитьСерверы();
	КонецЕсли;

	Для Каждого ТекСервер Из Серверы Цикл
		Если ТекСервер["agent-host"] = АдресСервера И ТекСервер["agent-port"] = ПортСервера Тогда
			Возврат ТекСервер;
		КонецЕсли;
	КонецЦикла;

	Возврат Неопределено;

КонецФункции // Сервер()

Функция Список() Экспорт

	Возврат ОбщегоНазначения.ДанныеВJSON(Серверы(Истина));
	
КонецФункции // Список()

#КонецОбласти // ПрограммныйИнтерфейс

#Область ПолучениеДанныхСерверов

Функция СерверыАгента(Знач Агент)

	СерверыАгента = Новый Массив();

	Кластеры = Агент.Кластеры().Список();

	Для Каждого ТекКластер Из Кластеры Цикл

		СерверыКластера = СерверыКластера(ТекКластер);

		Для Каждого ТекСервер Из СерверыКластера Цикл
			
			ТекСервер.Вставить("agent", СтрШаблон("%1:%2",
			                                  Агент.АдресСервераАдминистрирования(),
			                                  Агент.ПортСервераАдминистрирования()));

			СерверыАгента.Добавить(ТекСервер);

		КонецЦикла;

	КонецЦикла;

	Возврат СерверыАгента;

КонецФункции // СерверыАгента()

Функция СерверыКластера(Знач Кластер)

	СерверыКластера = Новый Массив();
	
	СписокСерверов = Кластер.Серверы().Список(, , Истина);

	ПоляСервера = Кластер.Серверы().ПараметрыОбъекта("ИмяРАК");

	Для Каждого ТекСервер Из СписокСерверов Цикл

		ОписаниеСервера = Новый Соответствие();
		ОписаниеСервера.Вставить("cluster" , Кластер.Имя());

		Для Каждого ТекЭлемент Из ПоляСервера Цикл
			ЗначениеЭлемента = ТекСервер[ТекЭлемент.Значение.Имя];
			Если ТекЭлемент.Ключ = "server" Тогда
				ЗначениеЭлемента = ТекСервер[ПоляСервера["name"].Имя];
			КонецЕсли;
			ОписаниеСервера.Вставить(ТекЭлемент.Ключ, ЗначениеЭлемента);
		КонецЦикла;

		СерверыКластера.Добавить(ОписаниеСервера);

	КонецЦикла;

	Возврат СерверыКластера;
	
КонецФункции // СерверыКластера()

#КонецОбласти // ПолучениеДанныхСерверов

Инициализировать();
